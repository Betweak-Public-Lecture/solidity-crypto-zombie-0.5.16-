{
  "contractName": "ZombieBattle",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ZombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerZombieCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_prob",
          "type": "uint256"
        }
      ],
      "name": "setAttakVictoryProbability",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ZombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerZombieCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prob\",\"type\":\"uint256\"}],\"name\":\"setAttakVictoryProbability\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"withdraw(uint256)\":{\"notice\":\"withdraw: \\uc8fc\\uc5b4\\uc9c4 parameter\\ub9cc\\ud07c \\uc778\\ucd9c\"},\"withdrawAll()\":{\"notice\":\"withdrawAll: \\uc804\\uc561 \\uc778\\ucd9c\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ZombieBattle.sol\":\"ZombieBattle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"project:/contracts/ZombieBattle.sol\":{\"keccak256\":\"0xebbb0ef14611b55006bef9a04d3cc53b6367a1a4939971d4efecbb6b8a3bc96a\",\"urls\":[\"bzz-raw://ed477342900b02f24c65fe6de67e985fa57bc7c87c25f867d9a1a856b9630a34\",\"dweb:/ipfs/QmcGL2rZTKxSctAku5Yx4V41k53uuBGHp1fQL2ZjRotZ6p\"]},\"project:/contracts/ZombieFactory.sol\":{\"keccak256\":\"0x14be307ba2c101f9aa8afe5d1aadc276672c1e0118c927d62e00184edae42588\",\"urls\":[\"bzz-raw://58a244a712c9215b5dd12202231aa5e037c6f1a29a28a5f930c094e55ffe9ed7\",\"dweb:/ipfs/QmPaL8w9szKJy4TWCXovn2W3xSro7wunbFxJ5KhrYsHiW1\"]},\"project:/contracts/ZombieFeeding.sol\":{\"keccak256\":\"0xffc3d9e09b027e7930ddc39b6b739cd48c394f31a48e11df84e5c87e8cbb0c4d\",\"urls\":[\"bzz-raw://52fcc85b0b35d14c6767782255929167475035ff110fe1d8dde3d008803f2133\",\"dweb:/ipfs/QmXwMg3tFfqHSm9QXWpRF4JvBQZZwF2x6ECF59ga68hgX2\"]},\"project:/contracts/ZombieHelper.sol\":{\"keccak256\":\"0x46f5cb010eb9116c83a6f31cf0f7f5dee01893616e9277b6709f5a4414276a46\",\"urls\":[\"bzz-raw://31da7844da88d5250187537f1846ff3a017fdd112ee362e02c318b0a190a7ae4\",\"dweb:/ipfs/QmSXAdvx4M3kYFPntN4LE1AaXyvA4h1JgkttABn1HQcwHL\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556201518060035566038d7ea4c6800060085560006009556046600a55600061003e6100e160201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100e9565b600033905090565b611c92806100f86000396000f3fe6080604052600436106101145760003560e01c8063715018a6116100a0578063c39cbef111610064578063c39cbef114610640578063ccf670f8146106d0578063e1fa76381461070b578063e4cda81914610750578063f2fde38b1461078b57610114565b8063715018a6146104c45780637bff0a01146104db578063853828b6146105a35780638da5cb5b146105ba5780638f32d59b1461061157610114565b80632e1a7d4d116100e75780632e1a7d4d146102d25780634412e1041461030d578063528b7b8f146103b35780635f4623f11461042e5780635faf28801461047f57610114565b806301afd7e1146101195780630ce90ec21461017e57806317a7f4cc146101ac5780632052465e146101f1575b600080fd5b34801561012557600080fd5b506101686004803603602081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107dc565b6040518082815260200191505060405180910390f35b6101aa6004803603602081101561019457600080fd5b81019080803590602001909291905050506107f4565b005b3480156101b857600080fd5b506101ef600480360360408110156101cf57600080fd5b81019080803590602001909291908035906020019092919050505061085c565b005b3480156101fd57600080fd5b5061022a6004803603602081101561021457600080fd5b81019080803590602001909291905050506109e7565b60405180806020018581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001828103825286818151815260200191508051906020019080838360005b83811015610294578082015181840152602081019050610279565b50505050905090810190601f1680156102c15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156102de57600080fd5b5061030b600480360360208110156102f557600080fd5b8101908080359060200190929190505050610adc565b005b34801561031957600080fd5b5061035c6004803603602081101561033057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b62565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561039f578082015181840152602081019050610384565b505050509050019250505060405180910390f35b3480156103bf57600080fd5b506103ec600480360360208110156103d657600080fd5b8101908080359060200190929190505050610c8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043a57600080fd5b5061047d6004803603602081101561045157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cc2565b005b34801561048b57600080fd5b506104c2600480360360408110156104a257600080fd5b810190808035906020019092919080359060200190929190505050610d80565b005b3480156104d057600080fd5b506104d9610e5a565b005b3480156104e757600080fd5b506105a1600480360360208110156104fe57600080fd5b810190808035906020019064010000000081111561051b57600080fd5b82018360208201111561052d57600080fd5b8035906020019184600183028401116401000000008311171561054f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f93565b005b3480156105af57600080fd5b506105b8610ffa565b005b3480156105c657600080fd5b506105cf61107f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061d57600080fd5b506106266110a8565b604051808215151515815260200191505060405180910390f35b34801561064c57600080fd5b506106ce6004803603604081101561066357600080fd5b81019080803590602001909291908035906020019064010000000081111561068a57600080fd5b82018360208201111561069c57600080fd5b803590602001918460018302840111640100000000831117156106be57600080fd5b9091929391929390505050611106565b005b3480156106dc57600080fd5b50610709600480360360208110156106f357600080fd5b81019080803590602001909291905050506111ec565b005b34801561071757600080fd5b5061074e6004803603604081101561072e57600080fd5b810190808035906020019092919080359060200190929190505050611270565b005b34801561075c57600080fd5b506107896004803603602081101561077357600080fd5b81019080803590602001909291905050506112e1565b005b34801561079757600080fd5b506107da600480360360208110156107ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611380565b005b60066020528060005260406000206000915090505481565b600854341461080257600080fd5b6004818154811061080f57fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b1580156108d257600080fd5b505afa1580156108e6573d6000803e3d6000fd5b505050506040513d6101408110156108fd57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809150506109e283826040518060400160405280600581526020017f6b69747479000000000000000000000000000000000000000000000000000000815250611406565b505050565b600481815481106109f457fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aa05780601f10610a7557610100808354040283529160200191610aa0565b820191906000526020600020905b815481529060010190602001808311610a8357829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16905084565b610ae46110a8565b610b56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610b5f816115da565b50565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610bd35781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610c84576005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610c775780838381518110610c6257fe5b60200260200101818152505081806001019250505b8080600101915050610be1565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cca6110a8565b610d3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610d9157fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610dc457600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e3057600080fd5b8360048681548110610e3e57fe5b9060005260206000209060030201600101819055505050505050565b610e626110a8565b610ed4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610fdf57600080fd5b6000610fea826116b8565b9050610ff68282611746565b5050565b6110026110a8565b611074576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61107d476115da565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110ea611975565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600283816004828154811061111757fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff16101561114a57600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111b657600080fd5b8484600488815481106111c557fe5b906000526020600020906003020160000191906111e3929190611b12565b50505050505050565b6111f46110a8565b611266576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112dc57600080fd5b505050565b6112e96110a8565b61135b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060001115801561136d575060648111155b61137657600080fd5b80600a8190555050565b6113886110a8565b6113fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6114038161197d565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461147257600080fd5b60006004858154811061148157fe5b9060005260206000209060030201905061149a81611ac1565b6114a357600080fd5b6000600285836001015401816114b557fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b602083106115365780518252602082019150602081019050602083039250611513565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561158a5760636064828161158357fe5b0682030190505b6115c96040518060400160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082611746565b6115d282611ae8565b505050505050565b6115e26110a8565b611654576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b4781111561166157600080fd5b600061166b61107f565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156116b3573d6000803e3d6000fd5b505050565b600080826040516020018082805190602001908083835b602083106116f257805182526020820191506020810190506020830392506116cf565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161173d57fe5b06915050919050565b6000600160046040518060800160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906117c5929190611b92565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555050500390507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611893578082015181840152602081019050611878565b50505050905090810190601f1680156118c05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611c386026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160020160049054906101000a900463ffffffff1663ffffffff164210159050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b5357803560ff1916838001178555611b81565b82800160010185558215611b81579182015b82811115611b80578235825591602001919060010190611b65565b5b509050611b8e9190611c12565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bd357805160ff1916838001178555611c01565b82800160010185558215611c01579182015b82811115611c00578251825591602001919060010190611be5565b5b509050611c0e9190611c12565b5090565b611c3491905b80821115611c30576000816000905550600101611c18565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a7231582085e2d7c47c8944a2caaebf299b94cb5a4292c5c39ddb96d74f0e8bc3c2b7dedb64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c8063715018a6116100a0578063c39cbef111610064578063c39cbef114610640578063ccf670f8146106d0578063e1fa76381461070b578063e4cda81914610750578063f2fde38b1461078b57610114565b8063715018a6146104c45780637bff0a01146104db578063853828b6146105a35780638da5cb5b146105ba5780638f32d59b1461061157610114565b80632e1a7d4d116100e75780632e1a7d4d146102d25780634412e1041461030d578063528b7b8f146103b35780635f4623f11461042e5780635faf28801461047f57610114565b806301afd7e1146101195780630ce90ec21461017e57806317a7f4cc146101ac5780632052465e146101f1575b600080fd5b34801561012557600080fd5b506101686004803603602081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107dc565b6040518082815260200191505060405180910390f35b6101aa6004803603602081101561019457600080fd5b81019080803590602001909291905050506107f4565b005b3480156101b857600080fd5b506101ef600480360360408110156101cf57600080fd5b81019080803590602001909291908035906020019092919050505061085c565b005b3480156101fd57600080fd5b5061022a6004803603602081101561021457600080fd5b81019080803590602001909291905050506109e7565b60405180806020018581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001828103825286818151815260200191508051906020019080838360005b83811015610294578082015181840152602081019050610279565b50505050905090810190601f1680156102c15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156102de57600080fd5b5061030b600480360360208110156102f557600080fd5b8101908080359060200190929190505050610adc565b005b34801561031957600080fd5b5061035c6004803603602081101561033057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b62565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561039f578082015181840152602081019050610384565b505050509050019250505060405180910390f35b3480156103bf57600080fd5b506103ec600480360360208110156103d657600080fd5b8101908080359060200190929190505050610c8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043a57600080fd5b5061047d6004803603602081101561045157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cc2565b005b34801561048b57600080fd5b506104c2600480360360408110156104a257600080fd5b810190808035906020019092919080359060200190929190505050610d80565b005b3480156104d057600080fd5b506104d9610e5a565b005b3480156104e757600080fd5b506105a1600480360360208110156104fe57600080fd5b810190808035906020019064010000000081111561051b57600080fd5b82018360208201111561052d57600080fd5b8035906020019184600183028401116401000000008311171561054f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f93565b005b3480156105af57600080fd5b506105b8610ffa565b005b3480156105c657600080fd5b506105cf61107f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061d57600080fd5b506106266110a8565b604051808215151515815260200191505060405180910390f35b34801561064c57600080fd5b506106ce6004803603604081101561066357600080fd5b81019080803590602001909291908035906020019064010000000081111561068a57600080fd5b82018360208201111561069c57600080fd5b803590602001918460018302840111640100000000831117156106be57600080fd5b9091929391929390505050611106565b005b3480156106dc57600080fd5b50610709600480360360208110156106f357600080fd5b81019080803590602001909291905050506111ec565b005b34801561071757600080fd5b5061074e6004803603604081101561072e57600080fd5b810190808035906020019092919080359060200190929190505050611270565b005b34801561075c57600080fd5b506107896004803603602081101561077357600080fd5b81019080803590602001909291905050506112e1565b005b34801561079757600080fd5b506107da600480360360208110156107ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611380565b005b60066020528060005260406000206000915090505481565b600854341461080257600080fd5b6004818154811061080f57fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b1580156108d257600080fd5b505afa1580156108e6573d6000803e3d6000fd5b505050506040513d6101408110156108fd57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809150506109e283826040518060400160405280600581526020017f6b69747479000000000000000000000000000000000000000000000000000000815250611406565b505050565b600481815481106109f457fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aa05780601f10610a7557610100808354040283529160200191610aa0565b820191906000526020600020905b815481529060010190602001808311610a8357829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16905084565b610ae46110a8565b610b56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610b5f816115da565b50565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610bd35781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610c84576005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610c775780838381518110610c6257fe5b60200260200101818152505081806001019250505b8080600101915050610be1565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cca6110a8565b610d3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610d9157fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610dc457600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e3057600080fd5b8360048681548110610e3e57fe5b9060005260206000209060030201600101819055505050505050565b610e626110a8565b610ed4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610fdf57600080fd5b6000610fea826116b8565b9050610ff68282611746565b5050565b6110026110a8565b611074576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61107d476115da565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110ea611975565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600283816004828154811061111757fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff16101561114a57600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111b657600080fd5b8484600488815481106111c557fe5b906000526020600020906003020160000191906111e3929190611b12565b50505050505050565b6111f46110a8565b611266576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112dc57600080fd5b505050565b6112e96110a8565b61135b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060001115801561136d575060648111155b61137657600080fd5b80600a8190555050565b6113886110a8565b6113fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6114038161197d565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461147257600080fd5b60006004858154811061148157fe5b9060005260206000209060030201905061149a81611ac1565b6114a357600080fd5b6000600285836001015401816114b557fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b602083106115365780518252602082019150602081019050602083039250611513565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561158a5760636064828161158357fe5b0682030190505b6115c96040518060400160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082611746565b6115d282611ae8565b505050505050565b6115e26110a8565b611654576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b4781111561166157600080fd5b600061166b61107f565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156116b3573d6000803e3d6000fd5b505050565b600080826040516020018082805190602001908083835b602083106116f257805182526020820191506020810190506020830392506116cf565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161173d57fe5b06915050919050565b6000600160046040518060800160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906117c5929190611b92565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555050500390507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611893578082015181840152602081019050611878565b50505050905090810190601f1680156118c05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611c386026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160020160049054906101000a900463ffffffff1663ffffffff164210159050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b5357803560ff1916838001178555611b81565b82800160010185558215611b81579182015b82811115611b80578235825591602001919060010190611b65565b5b509050611b8e9190611c12565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bd357805160ff1916838001178555611c01565b82800160010185558215611c01579182015b82811115611c00578251825591602001919060010190611be5565b5b509050611c0e9190611c12565b5090565b611c3491905b80821115611c30576000816000905550600101611c18565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a7231582085e2d7c47c8944a2caaebf299b94cb5a4292c5c39ddb96d74f0e8bc3c2b7dedb64736f6c63430005100032",
  "sourceMap": "60:1237:3:-;;;476:2:4;456:22;;509:9;;505:2;:13;484:34;;548:6;525:29;;441:11:6;420:32;;125:1:3;105:21;;168:2;133:37;;698:17:1;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;60:1237:3;;788:96:0;833:15;867:10;860:17;;788:96;:::o;60:1237:3:-;;;;;;;",
  "deployedSourceMap": "60:1237:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:51:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:51:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;864:51:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1136:141:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1136:141:6;;;;;;;;;;;;;;;;;:::i;:::-;;1414:231:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1414:231:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1414:231:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;744:23:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;744:23:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;744:23:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;744:23:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:91:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;667:91:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;667:91:6;;;;;;;;;;;;;;;;;:::i;:::-;;2097:772;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2097:772:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2097:772:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2097:772:6;;;;;;;;;;;;;;;;;774:48:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;774:48:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;774:48:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;624:130:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:130:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;624:130:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;1891:198:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1891:198:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1891:198:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:1;;;:::i;:::-;;2637:209:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2637:209:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2637:209:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2637:209:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2637:209:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2637:209:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2637:209:4;;;;;;;;;;;;;;;:::i;:::-;;819:93:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;819:93:6;;;:::i;:::-;;899:77:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1674:209:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1674:209:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1674:209:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1674:209:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1674:209:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1674:209:6;;;;;;;;;;;;:::i;:::-;;1446:220;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1446:220:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1446:220:6;;;;;;;;;;;;;;;;;:::i;:::-;;820:113:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;820:113:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;820:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;941:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;941:169:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;941:169:3;;;;;;;;;;;;;;;;;:::i;:::-;;1970:107:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;864:51:4;;;;;;;;;;;;;;;;;:::o;1136:141:6:-;1221:10;;1208:9;:23;1200:32;;;;;;1243:7;1251:9;1243:18;;;;;;;;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:141;:::o;1414:231:5:-;1490:16;1548:14;;;;;;;;;;;:23;;;1572:8;1548:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1548:33:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1548:33:5;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1548:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:45;1608:9;1619:8;1592:45;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1414:231;;;:::o;744:23:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;667:91:6:-;1103:9:1;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:18:6;742:7;732:9;:18::i;:::-;667:91;:::o;2097:772::-;2190:16;2224:23;2264:16;:24;2281:6;2264:24;;;;;;;;;;;;;;;;2250:39;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2250:39:6;;;;2224:65;;2302:19;2324:1;2302:23;;2401:9;2413:1;2401:13;;2396:399;2420:7;:14;;;;2416:1;:18;2396:399;;;2510:13;:16;2524:1;2510:16;;;;;;;;;;;;;;;;;;;;;2500:26;;:6;:26;;;2496:288;;;2735:1;2713:6;2720:11;2713:19;;;;;;;;;;;;;:23;;;;;2755:13;;;;;;;2496:288;2436:3;;;;;;;2396:399;;;;2855:6;2848:13;;;;2097:772;;;:::o;774:48:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;624:130:5:-;1103:9:1;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:8:5;705:14;;:41;;;;;;;;;;;;;;;;;;624:130;:::o;1891:198:6:-;1984:2;1988:9;563:6;535:7;543:9;535:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;527:43;;;;;;2022:9;1040:13:4;:24;1054:9;1040:24;;;;;;;;;;;;;;;;;;;;;1026:38;;:10;:38;;;1018:47;;;;;;2074:7:6;2049;2057:9;2049:18;;;;;;;;;;;;;;;;;;:22;;:32;;;;581:1;1891:198;;;;:::o;1684:137:1:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;2637:209:4:-;2743:1;2711:16;:28;2728:10;2711:28;;;;;;;;;;;;;;;;:33;2703:42;;;;;;2755:16;2774:25;2793:5;2774:18;:25::i;:::-;2755:44;;2809:30;2823:5;2830:8;2809:13;:30::i;:::-;2637:209;;:::o;819:93:6:-;1103:9:1;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:32:6;882:21;872:9;:32::i;:::-;819:93::o;899:77:1:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;1674:209:6:-;1777:1;1780:9;563:6;535:7;543:9;535:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;527:43;;;;;;1814:9;1040:13:4;:24;1054:9;1040:24;;;;;;;;;;;;;;;;;;;;;1026:38;;:10;:38;;;1018:47;;;;;;1867:8:6;;1841:7;1849:9;1841:18;;;;;;;;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;581:1;1674:209;;;;;:::o;1446:220::-;1103:9:1;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:4:6;1641:10;:17;;;;1446:220;:::o;820:113:3:-;915:9;1040:13:4;:24;1054:9;1040:24;;;;;;;;;;;;;;;;;;;;;1026:38;;:10;:38;;;1018:47;;;;;;820:113:3;;;:::o;941:169::-;1103:9:1;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:5:3;1030:1;:10;;:26;;;;;1053:3;1044:5;:12;;1030:26;1022:35;;;;;;1097:5;1070:24;:32;;;;941:169;:::o;1970:107:1:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;762:644:5:-;907:9;1040:13:4;:24;1054:9;1040:24;;;;;;;;;;;;;;;;;;;;;1026:38;;:10;:38;;;1018:47;;;;;;988:21:5;1012:7;1020:9;1012:18;;;;;;;;;;;;;;;;;;988:42;;1049:16;1058:6;1049:8;:16::i;:::-;1041:25;;;;;;1079:14;1124:1;1110:10;1097:6;:10;;;:23;1096:29;;;;;;1079:46;;1218:25;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1218:25:5;;;1208:36;;;;;;1181:8;1164:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1164:26:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1164:26:5;;;1154:37;;;;;;:90;1136:184;;;1306:2;1299:3;1290:6;:12;;;;;;1280:6;:23;:28;1271:37;;1136:184;1330:31;;;;;;;;;;;;;;;;;;1354:6;1330:13;:31::i;:::-;1374:24;1391:6;1374:16;:24::i;:::-;1075:1:4;;762:644:5;;;;:::o;920:208:6:-;1103:9:1;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:21:6;993:7;:32;;985:41;;;;;;1037:21;1077:7;:5;:7::i;:::-;1037:49;;1097:5;:14;;:23;1112:7;1097:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1097:23:6;1159:1:1;920:208:6;:::o;2139:492:4:-;2233:7;2533:12;2583:4;2566:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2566:22:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2566:22:4;;;2556:33;;;;;;2548:42;;2533:57;;2614:10;;2607:4;:17;;;;;;2600:24;;;2139:492;;;:::o;1180:740::-;1462:16;1570:1;1481:7;1507:50;;;;;;;;1514:5;1507:50;;;;1521:4;1507:50;;;;1527:1;1507:50;;;;;;1543:12;;1537:3;:18;1507:50;;;;;1481:86;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1481:86:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:90;1462:109;;1643:32;1653:8;1663:5;1670:4;1643:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1643:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1789:10;1763:13;:23;1777:8;1763:23;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1883:16;:28;1900:10;1883:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;1180:740;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;2178:225:1:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1785:121:5:-;1850:4;1881:7;:17;;;;;;;;;;;;1874:24;;:3;:24;;1867:31;;1785:121;;;:::o;1653:124::-;1756:12;;1750:3;:18;1723:7;:17;;;:46;;;;;;;;;;;;;;;;;;1653:124;:::o;60:1237:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\r\n\r\nimport \"./ZombieHelper.sol\";\r\n\r\ncontract ZombieBattle is ZombieHelper {\r\n    uint256 randNonce = 0;\r\n    uint256 attackVictoryProbability = 70;\r\n\r\n    // 2. 난수 생성함수 만들기(Fake Random) // 승리했는지 안했는지 체크 위해 생성\r\n    // a. 컨트랙트에 uint randNonce= 0;\r\n    // b. randMod(uint _modulus)함수 생성 internal returns(uint256)\r\n    // c. randNonce 증가시키고\r\n    // d. return uint(keccak256(abi.encodePacked(now, msg.sender, randNonce))) % _modulus\r\n    // 0.5버전에서는 해시하기전에 abi.encodePacked사\r\n    function randMod(uint256 _modulus) internal returns (uint256) {\r\n        randNonce++;\r\n\r\n        return\r\n            uint256(keccak256(abi.encodePacked(now, msg.sender, randNonce))) %\r\n            _modulus;\r\n    }\r\n\r\n    function attack(uint256 _zombieId, uint256 _targetId)\r\n        external\r\n        zombieOwnerOf(_zombieId)\r\n    {}\r\n\r\n    function setAttakVictoryProbability(uint256 _prob) external onlyOwner {\r\n        require(0 <= _prob && _prob <= 100);\r\n\r\n        attackVictoryProbability = _prob;\r\n    }\r\n    //     승리확률 70으로 생성하기\r\n    // (상태변수: uint attackVictoryProbability) 값은 70\r\n    // 2. 함수 attack(uint _zombieId, uint _targetId) external 생성\r\n}\r\n",
  "sourcePath": "C:\\Users\\user\\seocho_blockchain\\cryptozombie_0.5.16\\contracts\\ZombieBattle.sol",
  "ast": {
    "absolutePath": "project:/contracts/ZombieBattle.sol",
    "exportedSymbols": {
      "ZombieBattle": [
        247
      ]
    },
    "id": 248,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 179,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "project:/contracts/ZombieHelper.sol",
        "file": "./ZombieHelper.sol",
        "id": 180,
        "nodeType": "ImportDirective",
        "scope": 248,
        "sourceUnit": 788,
        "src": "28:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 181,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 787,
              "src": "85:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$787",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 182,
            "nodeType": "InheritanceSpecifier",
            "src": "85:12:3"
          }
        ],
        "contractDependencies": [
          26,
          144,
          401,
          573,
          787
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 247,
        "linearizedBaseContracts": [
          247,
          787,
          573,
          401,
          144,
          26
        ],
        "name": "ZombieBattle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 185,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 247,
            "src": "105:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "105:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 184,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "125:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 188,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 247,
            "src": "133:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 186,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "133:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 187,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "168:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "661:151:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "672:11:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "672:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "672:11:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 202,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 804,
                                  "src": "751:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 203,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 802,
                                    "src": "756:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "756:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 205,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 185,
                                  "src": "768:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 200,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 789,
                                  "src": "734:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "734:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "734:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 199,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "724:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "724:55:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "716:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "716:64:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "796:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "716:88:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 194,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "696:108:3"
                }
              ]
            },
            "documentation": null,
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "616:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:18:3"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "652:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "651:9:3"
            },
            "scope": 247,
            "src": "599:213:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "931:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 220,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 215,
                    "src": "915:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 221,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 219,
                  "name": "zombieOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "901:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "901:24:3"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "836:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "855:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "835:38:3"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "931:0:3"
            },
            "scope": 247,
            "src": "820:113:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "1011:99:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1030:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 233,
                            "name": "_prob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "1035:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1030:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "_prob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "1044:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "313030",
                            "id": 236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1053:3:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1044:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1030:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        805,
                        806
                      ],
                      "referencedDeclaration": 805,
                      "src": "1022:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1022:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "1022:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 241,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "1070:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 242,
                      "name": "_prob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "1097:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1070:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 228,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 77,
                  "src": "1001:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1001:9:3"
              }
            ],
            "name": "setAttakVictoryProbability",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "name": "_prob",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "977:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "976:15:3"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:0:3"
            },
            "scope": 247,
            "src": "941:169:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 248,
        "src": "60:1237:3"
      }
    ],
    "src": "0:1299:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/ZombieBattle.sol",
      "exportedSymbols": {
        "ZombieBattle": [
          247
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 179,
        "name": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "attributes": {
          "SourceUnit": 788,
          "absolutePath": "project:/contracts/ZombieHelper.sol",
          "file": "./ZombieHelper.sol",
          "scope": 248,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 180,
        "name": "ImportDirective",
        "src": "28:28:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            144,
            401,
            573,
            787
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            247,
            787,
            573,
            401,
            144,
            26
          ],
          "name": "ZombieBattle",
          "scope": 248
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ZombieHelper",
                  "referencedDeclaration": 787,
                  "type": "contract ZombieHelper"
                },
                "id": 181,
                "name": "UserDefinedTypeName",
                "src": "85:12:3"
              }
            ],
            "id": 182,
            "name": "InheritanceSpecifier",
            "src": "85:12:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "randNonce",
              "scope": 247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 183,
                "name": "ElementaryTypeName",
                "src": "105:7:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 184,
                "name": "Literal",
                "src": "125:1:3"
              }
            ],
            "id": 185,
            "name": "VariableDeclaration",
            "src": "105:21:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "attackVictoryProbability",
              "scope": 247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 186,
                "name": "ElementaryTypeName",
                "src": "133:7:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3730",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 70",
                  "value": "70"
                },
                "id": 187,
                "name": "Literal",
                "src": "168:2:3"
              }
            ],
            "id": 188,
            "name": "VariableDeclaration",
            "src": "133:37:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "randMod",
              "scope": 247,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_modulus",
                      "scope": 213,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 189,
                        "name": "ElementaryTypeName",
                        "src": "616:7:3"
                      }
                    ],
                    "id": 190,
                    "name": "VariableDeclaration",
                    "src": "616:16:3"
                  }
                ],
                "id": 191,
                "name": "ParameterList",
                "src": "615:18:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 213,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 192,
                        "name": "ElementaryTypeName",
                        "src": "652:7:3"
                      }
                    ],
                    "id": 193,
                    "name": "VariableDeclaration",
                    "src": "652:7:3"
                  }
                ],
                "id": 194,
                "name": "ParameterList",
                "src": "651:9:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 185,
                              "type": "uint256",
                              "value": "randNonce"
                            },
                            "id": 195,
                            "name": "Identifier",
                            "src": "672:9:3"
                          }
                        ],
                        "id": 196,
                        "name": "UnaryOperation",
                        "src": "672:11:3"
                      }
                    ],
                    "id": 197,
                    "name": "ExpressionStatement",
                    "src": "672:11:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 194
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "%",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 198,
                                "name": "ElementaryTypeNameExpression",
                                "src": "716:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 796,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 199,
                                    "name": "Identifier",
                                    "src": "724:9:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "encodePacked",
                                          "referencedDeclaration": null,
                                          "type": "function () pure returns (bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 789,
                                              "type": "abi",
                                              "value": "abi"
                                            },
                                            "id": 200,
                                            "name": "Identifier",
                                            "src": "734:3:3"
                                          }
                                        ],
                                        "id": 201,
                                        "name": "MemberAccess",
                                        "src": "734:16:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 804,
                                          "type": "uint256",
                                          "value": "now"
                                        },
                                        "id": 202,
                                        "name": "Identifier",
                                        "src": "751:3:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 802,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 203,
                                            "name": "Identifier",
                                            "src": "756:3:3"
                                          }
                                        ],
                                        "id": 204,
                                        "name": "MemberAccess",
                                        "src": "756:10:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 185,
                                          "type": "uint256",
                                          "value": "randNonce"
                                        },
                                        "id": 205,
                                        "name": "Identifier",
                                        "src": "768:9:3"
                                      }
                                    ],
                                    "id": 206,
                                    "name": "FunctionCall",
                                    "src": "734:44:3"
                                  }
                                ],
                                "id": 207,
                                "name": "FunctionCall",
                                "src": "724:55:3"
                              }
                            ],
                            "id": 208,
                            "name": "FunctionCall",
                            "src": "716:64:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 190,
                              "type": "uint256",
                              "value": "_modulus"
                            },
                            "id": 209,
                            "name": "Identifier",
                            "src": "796:8:3"
                          }
                        ],
                        "id": 210,
                        "name": "BinaryOperation",
                        "src": "716:88:3"
                      }
                    ],
                    "id": 211,
                    "name": "Return",
                    "src": "696:108:3"
                  }
                ],
                "id": 212,
                "name": "Block",
                "src": "661:151:3"
              }
            ],
            "id": 213,
            "name": "FunctionDefinition",
            "src": "599:213:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "attack",
              "scope": 247,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombieId",
                      "scope": 224,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 214,
                        "name": "ElementaryTypeName",
                        "src": "836:7:3"
                      }
                    ],
                    "id": 215,
                    "name": "VariableDeclaration",
                    "src": "836:17:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_targetId",
                      "scope": 224,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 216,
                        "name": "ElementaryTypeName",
                        "src": "855:7:3"
                      }
                    ],
                    "id": 217,
                    "name": "VariableDeclaration",
                    "src": "855:17:3"
                  }
                ],
                "id": 218,
                "name": "ParameterList",
                "src": "835:38:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 222,
                "name": "ParameterList",
                "src": "931:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 306,
                      "type": "modifier (uint256)",
                      "value": "zombieOwnerOf"
                    },
                    "id": 219,
                    "name": "Identifier",
                    "src": "901:13:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 215,
                      "type": "uint256",
                      "value": "_zombieId"
                    },
                    "id": 220,
                    "name": "Identifier",
                    "src": "915:9:3"
                  }
                ],
                "id": 221,
                "name": "ModifierInvocation",
                "src": "901:24:3"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 223,
                "name": "Block",
                "src": "931:2:3"
              }
            ],
            "id": 224,
            "name": "FunctionDefinition",
            "src": "820:113:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setAttakVictoryProbability",
              "scope": 247,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_prob",
                      "scope": 246,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 225,
                        "name": "ElementaryTypeName",
                        "src": "977:7:3"
                      }
                    ],
                    "id": 226,
                    "name": "VariableDeclaration",
                    "src": "977:13:3"
                  }
                ],
                "id": 227,
                "name": "ParameterList",
                "src": "976:15:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 230,
                "name": "ParameterList",
                "src": "1011:0:3"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 77,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 228,
                    "name": "Identifier",
                    "src": "1001:9:3"
                  }
                ],
                "id": 229,
                "name": "ModifierInvocation",
                "src": "1001:9:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                805,
                                806
                              ],
                              "referencedDeclaration": 805,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 231,
                            "name": "Identifier",
                            "src": "1022:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 232,
                                    "name": "Literal",
                                    "src": "1030:1:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 226,
                                      "type": "uint256",
                                      "value": "_prob"
                                    },
                                    "id": 233,
                                    "name": "Identifier",
                                    "src": "1035:5:3"
                                  }
                                ],
                                "id": 234,
                                "name": "BinaryOperation",
                                "src": "1030:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 226,
                                      "type": "uint256",
                                      "value": "_prob"
                                    },
                                    "id": 235,
                                    "name": "Identifier",
                                    "src": "1044:5:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "313030",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 100",
                                      "value": "100"
                                    },
                                    "id": 236,
                                    "name": "Literal",
                                    "src": "1053:3:3"
                                  }
                                ],
                                "id": 237,
                                "name": "BinaryOperation",
                                "src": "1044:12:3"
                              }
                            ],
                            "id": 238,
                            "name": "BinaryOperation",
                            "src": "1030:26:3"
                          }
                        ],
                        "id": 239,
                        "name": "FunctionCall",
                        "src": "1022:35:3"
                      }
                    ],
                    "id": 240,
                    "name": "ExpressionStatement",
                    "src": "1022:35:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 188,
                              "type": "uint256",
                              "value": "attackVictoryProbability"
                            },
                            "id": 241,
                            "name": "Identifier",
                            "src": "1070:24:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 226,
                              "type": "uint256",
                              "value": "_prob"
                            },
                            "id": 242,
                            "name": "Identifier",
                            "src": "1097:5:3"
                          }
                        ],
                        "id": 243,
                        "name": "Assignment",
                        "src": "1070:32:3"
                      }
                    ],
                    "id": 244,
                    "name": "ExpressionStatement",
                    "src": "1070:32:3"
                  }
                ],
                "id": 245,
                "name": "Block",
                "src": "1011:99:3"
              }
            ],
            "id": 246,
            "name": "FunctionDefinition",
            "src": "941:169:3"
          }
        ],
        "id": 247,
        "name": "ContractDefinition",
        "src": "60:1237:3"
      }
    ],
    "id": 248,
    "name": "SourceUnit",
    "src": "0:1299:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-08T07:25:09.124Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "withdraw(uint256)": {
        "notice": "withdraw: 주어진 parameter만큼 인출"
      },
      "withdrawAll()": {
        "notice": "withdrawAll: 전액 인출"
      }
    }
  }
}