{
  "contractName": "ZombieBattle",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ZombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerZombieCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "winCount",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_prob",
          "type": "uint256"
        }
      ],
      "name": "setAttakVictoryProbability",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ZombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerZombieCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prob\",\"type\":\"uint256\"}],\"name\":\"setAttakVictoryProbability\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"withdraw(uint256)\":{\"notice\":\"withdraw: \\uc8fc\\uc5b4\\uc9c4 parameter\\ub9cc\\ud07c \\uc778\\ucd9c\"},\"withdrawAll()\":{\"notice\":\"withdrawAll: \\uc804\\uc561 \\uc778\\ucd9c\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ZombieBattle.sol\":\"ZombieBattle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"project:/contracts/ZombieBattle.sol\":{\"keccak256\":\"0xcabcd45497a22f5cc689ec75077a809f1b88313c09b1af1a8ac94a3cf59e71d4\",\"urls\":[\"bzz-raw://a44bf672fc8ab836e93b255b682c74ac9b111fa3a2207d1ef3c1e1fa455627c1\",\"dweb:/ipfs/QmZQw9LpXygN3DS74PAAtrK8rPSUAkMvXk7RBzbe3nv5o4\"]},\"project:/contracts/ZombieFactory.sol\":{\"keccak256\":\"0xc002eccd24bf288657491b25029364994fb0a3bbffc3c759653971bb1151335b\",\"urls\":[\"bzz-raw://9b703c0b5b817bf76b46d7bae8c1f81dd68dacd231e5884d2c83df44540799d4\",\"dweb:/ipfs/QmRfcPhAPRJX76dnkUtNXuSZFYeoUeHSrCsa1rK5MZUMC9\"]},\"project:/contracts/ZombieFeeding.sol\":{\"keccak256\":\"0xffc3d9e09b027e7930ddc39b6b739cd48c394f31a48e11df84e5c87e8cbb0c4d\",\"urls\":[\"bzz-raw://52fcc85b0b35d14c6767782255929167475035ff110fe1d8dde3d008803f2133\",\"dweb:/ipfs/QmXwMg3tFfqHSm9QXWpRF4JvBQZZwF2x6ECF59ga68hgX2\"]},\"project:/contracts/ZombieHelper.sol\":{\"keccak256\":\"0x46f5cb010eb9116c83a6f31cf0f7f5dee01893616e9277b6709f5a4414276a46\",\"urls\":[\"bzz-raw://31da7844da88d5250187537f1846ff3a017fdd112ee362e02c318b0a190a7ae4\",\"dweb:/ipfs/QmSXAdvx4M3kYFPntN4LE1AaXyvA4h1JgkttABn1HQcwHL\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c8063715018a6116100a0578063c39cbef111610064578063c39cbef11461065e578063ccf670f8146106ee578063e1fa763814610729578063e4cda8191461076e578063f2fde38b146107a957610114565b8063715018a6146104e25780637bff0a01146104f9578063853828b6146105c15780638da5cb5b146105d85780638f32d59b1461062f57610114565b80632e1a7d4d116100e75780632e1a7d4d146102f05780634412e1041461032b578063528b7b8f146103d15780635f4623f11461044c5780635faf28801461049d57610114565b806301afd7e1146101195780630ce90ec21461017e57806317a7f4cc146101ac5780632052465e146101f1575b600080fd5b34801561012557600080fd5b506101686004803603602081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107fa565b6040518082815260200191505060405180910390f35b6101aa6004803603602081101561019457600080fd5b8101908080359060200190929190505050610812565b005b3480156101b857600080fd5b506101ef600480360360408110156101cf57600080fd5b81019080803590602001909291908035906020019092919050505061087a565b005b3480156101fd57600080fd5b5061022a6004803603602081101561021457600080fd5b8101908080359060200190929190505050610a05565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156102b0578082015181840152602081019050610295565b50505050905090810190601f1680156102dd5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b3480156102fc57600080fd5b506103296004803603602081101561031357600080fd5b8101908080359060200190929190505050610b22565b005b34801561033757600080fd5b5061037a6004803603602081101561034e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103bd5780820151818401526020810190506103a2565b505050509050019250505060405180910390f35b3480156103dd57600080fd5b5061040a600480360360208110156103f457600080fd5b8101908080359060200190929190505050610cd5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045857600080fd5b5061049b6004803603602081101561046f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d08565b005b3480156104a957600080fd5b506104e0600480360360408110156104c057600080fd5b810190808035906020019092919080359060200190929190505050610dc6565b005b3480156104ee57600080fd5b506104f7610ea0565b005b34801561050557600080fd5b506105bf6004803603602081101561051c57600080fd5b810190808035906020019064010000000081111561053957600080fd5b82018360208201111561054b57600080fd5b8035906020019184600183028401116401000000008311171561056d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610fd9565b005b3480156105cd57600080fd5b506105d6611040565b005b3480156105e457600080fd5b506105ed6110c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063b57600080fd5b506106446110ee565b604051808215151515815260200191505060405180910390f35b34801561066a57600080fd5b506106ec6004803603604081101561068157600080fd5b8101908080359060200190929190803590602001906401000000008111156106a857600080fd5b8201836020820111156106ba57600080fd5b803590602001918460018302840111640100000000831117156106dc57600080fd5b909192939192939050505061114c565b005b3480156106fa57600080fd5b506107276004803603602081101561071157600080fd5b8101908080359060200190929190505050611232565b005b34801561073557600080fd5b5061076c6004803603604081101561074c57600080fd5b8101908080359060200190929190803590602001909291905050506112b6565b005b34801561077a57600080fd5b506107a76004803603602081101561079157600080fd5b81019080803590602001909291905050506114fe565b005b3480156107b557600080fd5b506107f8600480360360208110156107cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061159d565b005b60066020528060005260406000206000915090505481565b600854341461082057600080fd5b6004818154811061082d57fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b1580156108f057600080fd5b505afa158015610904573d6000803e3d6000fd5b505050506040513d61014081101561091b57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505090919293949596979850909192939495969750909192939495965090919293949550909192939450909192935090919250909150905080915050610a0083826040518060400160405280600581526020017f6b69747479000000000000000000000000000000000000000000000000000000815250611623565b505050565b60048181548110610a1257fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abe5780601f10610a9357610100808354040283529160200191610abe565b820191906000526020600020905b815481529060010190602001808311610aa157829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b610b2a6110ee565b610b9c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ba5816117f7565b50565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610c195781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610cca576005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610cbd5780838381518110610ca857fe5b60200260200101818152505081806001019250505b8080600101915050610c27565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d106110ee565b610d82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610dd757fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610e0a57600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e7657600080fd5b8360048681548110610e8457fe5b9060005260206000209060030201600101819055505050505050565b610ea86110ee565b610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461102557600080fd5b6000611030826118d5565b905061103c8282611963565b5050565b6110486110ee565b6110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110c3476117f7565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611130611bee565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600283816004828154811061115d57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff16101561119057600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111fc57600080fd5b84846004888154811061120b57fe5b90600052602060002090600302016000019190611229929190611e1a565b50505050505050565b61123a6110ee565b6112ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461132257600080fd5b60006004848154811061133157fe5b9060005260206000209060030201905061134a81611bf6565b61135357600080fd5b60006004848154811061136257fe5b90600052602060002090600302019050600061137e6064611c1d565b9050600a5481101561147e5782600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550506114798683600101546040518060400160405280600681526020017f7a6f6d6269650000000000000000000000000000000000000000000000000000815250611623565b6114ed565b82600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550505b6114f683611cac565b505050505050565b6115066110ee565b611578576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060001115801561158a575060648111155b61159357600080fd5b80600a8190555050565b6115a56110ee565b611617576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61162081611cd6565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461168f57600080fd5b60006004858154811061169e57fe5b906000526020600020906003020190506116b781611bf6565b6116c057600080fd5b6000600285836001015401816116d257fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b602083106117535780518252602082019150602081019050602083039250611730565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156117a7576063606482816117a057fe5b0682030190505b6117e66040518060400160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082611963565b6117ef82611cac565b505050505050565b6117ff6110ee565b611871576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b4781111561187e57600080fd5b60006118886110c5565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156118d0573d6000803e3d6000fd5b505050565b600080826040516020018082805190602001908083835b6020831061190f57805182526020820191506020810190506020830392506118ec565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161195a57fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906119f8929190611e9a565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff16021790555050500390507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611b0c578082015181840152602081019050611af1565b50505050905090810190601f168015611b395780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550505050565b600033905090565b60008160020160049054906101000a900463ffffffff1663ffffffff164210159050919050565b6000600960008154809291906001019190505550814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c81611ca457fe5b069050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611f406026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e5b57803560ff1916838001178555611e89565b82800160010185558215611e89579182015b82811115611e88578235825591602001919060010190611e6d565b5b509050611e969190611f1a565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611edb57805160ff1916838001178555611f09565b82800160010185558215611f09579182015b82811115611f08578251825591602001919060010190611eed565b5b509050611f169190611f1a565b5090565b611f3c91905b80821115611f38576000816000905550600101611f20565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820310c1afc7b569b6e5aa7c508c92098650de8e6ab824a584b1c97952a5e57f02964736f6c63430005100032",
  "sourceMap": "60:1786:5:-;;;476:2:6;456:22;;509:9;;505:2;:13;484:34;;548:6;525:29;;441:11:8;420:32;;125:1:5;105:21;;168:2;133:37;;698:17:2;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;60:1786:5;;788:96:0;833:15;867:10;860:17;;788:96;:::o;60:1786:5:-;;;;;;;",
  "deployedSourceMap": "60:1786:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:51:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:51:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:51:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1136:141:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1136:141:8;;;;;;;;;;;;;;;;;:::i;:::-;;1414:231:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1414:231:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1414:231:7;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;795:23:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;795:23:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;795:23:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;795:23:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:91:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;667:91:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;667:91:8;;;;;;;;;;;;;;;;;:::i;:::-;;2097:772;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2097:772:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2097:772:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2097:772:8;;;;;;;;;;;;;;;;;825:48:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;825:48:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;825:48:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;624:130:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:130:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;624:130:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;1891:198:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1891:198:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1891:198:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:2;;;:::i;:::-;;2694:209:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2694:209:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2694:209:6;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2694:209:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2694:209:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2694:209:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2694:209:6;;;;;;;;;;;;;;;:::i;:::-;;819:93:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;819:93:8;;;:::i;:::-;;899:77:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1674:209:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1674:209:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1674:209:8;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1674:209:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1674:209:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1674:209:8;;;;;;;;;;;;:::i;:::-;;1446:220;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1446:220:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1446:220:8;;;;;;;;;;;;;;;;;:::i;:::-;;820:846:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;820:846:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;820:846:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1674:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1674:169:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1674:169:5;;;;;;;;;;;;;;;;;:::i;:::-;;1970:107:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;915:51:6;;;;;;;;;;;;;;;;;:::o;1136:141:8:-;1221:10;;1208:9;:23;1200:32;;;;;;1243:7;1251:9;1243:18;;;;;;;;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:141;:::o;1414:231:7:-;1490:16;1548:14;;;;;;;;;;;:23;;;1572:8;1548:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1548:33:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1548:33:7;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1548:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:45;1608:9;1619:8;1592:45;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1414:231;;;:::o;795:23:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;667:91:8:-;1103:9:2;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:18:8;742:7;732:9;:18::i;:::-;667:91;:::o;2097:772::-;2190:16;2224:23;2264:16;:24;2281:6;2264:24;;;;;;;;;;;;;;;;2250:39;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2250:39:8;;;;2224:65;;2302:19;2324:1;2302:23;;2401:9;2413:1;2401:13;;2396:399;2420:7;:14;;;;2416:1;:18;2396:399;;;2510:13;:16;2524:1;2510:16;;;;;;;;;;;;;;;;;;;;;2500:26;;:6;:26;;;2496:288;;;2735:1;2713:6;2720:11;2713:19;;;;;;;;;;;;;:23;;;;;2755:13;;;;;;;2496:288;2436:3;;;;;;;2396:399;;;;2855:6;2848:13;;;;2097:772;;;:::o;825:48:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;624:130:7:-;1103:9:2;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:8:7;705:14;;:41;;;;;;;;;;;;;;;;;;624:130;:::o;1891:198:8:-;1984:2;1988:9;563:6;535:7;543:9;535:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;527:43;;;;;;2022:9;1091:13:6;:24;1105:9;1091:24;;;;;;;;;;;;;;;;;;;;;1077:38;;:10;:38;;;1069:47;;;;;;2074:7:8;2049;2057:9;2049:18;;;;;;;;;;;;;;;;;;:22;;:32;;;;581:1;1891:198;;;;:::o;1684:137:2:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;2694:209:6:-;2800:1;2768:16;:28;2785:10;2768:28;;;;;;;;;;;;;;;;:33;2760:42;;;;;;2812:16;2831:25;2850:5;2831:18;:25::i;:::-;2812:44;;2866:30;2880:5;2887:8;2866:13;:30::i;:::-;2694:209;;:::o;819:93:8:-;1103:9:2;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:32:8;882:21;872:9;:32::i;:::-;819:93::o;899:77:2:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;1674:209:8:-;1777:1;1780:9;563:6;535:7;543:9;535:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;527:43;;;;;;1814:9;1091:13:6;:24;1105:9;1091:24;;;;;;;;;;;;;;;;;;;;;1077:38;;:10;:38;;;1069:47;;;;;;1867:8:8;;1841:7;1849:9;1841:18;;;;;;;;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;581:1;1674:209;;;;;:::o;1446:220::-;1103:9:2;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:4:8;1641:10;:17;;;;1446:220;:::o;820:846:5:-;915:9;1091:13:6;:24;1105:9;1091:24;;;;;;;;;;;;;;;;;;;;;1077:38;;:10;:38;;;1069:47;;;;;;942:23:5;968:7;976:9;968:18;;;;;;;;;;;;;;;;;;942:44;;1005:18;1014:8;1005;:18::i;:::-;997:27;;;;;;1035:26;1064:7;1072:9;1064:18;;;;;;;;;;;;;;;;;;1035:47;;1095:12;1110;1118:3;1110:7;:12::i;:::-;1095:27;;1238:24;;1231:4;:31;1227:395;;;1329:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1363:8;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1394:11;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:53;1450:9;1461:11;:15;;;1434:53;;;;;;;;;;;;;;;;;:15;:53::i;:::-;1227:395;;;1553:8;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1588:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1227:395;1632:26;1649:8;1632:16;:26::i;:::-;1126:1:6;;;820:846:5;;;:::o;1674:169::-;1103:9:2;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1768:5:5;1763:1;:10;;:26;;;;;1786:3;1777:5;:12;;1763:26;1755:35;;;;;;1830:5;1803:24;:32;;;;1674:169;:::o;1970:107:2:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;762:644:7:-;907:9;1091:13:6;:24;1105:9;1091:24;;;;;;;;;;;;;;;;;;;;;1077:38;;:10;:38;;;1069:47;;;;;;988:21:7;1012:7;1020:9;1012:18;;;;;;;;;;;;;;;;;;988:42;;1049:16;1058:6;1049:8;:16::i;:::-;1041:25;;;;;;1079:14;1124:1;1110:10;1097:6;:10;;;:23;1096:29;;;;;;1079:46;;1218:25;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1218:25:7;;;1208:36;;;;;;1181:8;1164:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1164:26:7;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1164:26:7;;;1154:37;;;;;;:90;1136:184;;;1306:2;1299:3;1290:6;:12;;;;;;1280:6;:23;:28;1271:37;;1136:184;1330:31;;;;;;;;;;;;;;;;;;1354:6;1330:13;:31::i;:::-;1374:24;1391:6;1374:16;:24::i;:::-;1126:1:6;;762:644:7;;;;:::o;920:208:8:-;1103:9:2;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:21:8;993:7;:32;;985:41;;;;;;1037:21;1077:7;:5;:7::i;:::-;1037:49;;1097:5;:14;;:23;1112:7;1097:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1097:23:8;1159:1:2;920:208:8;:::o;2196:492:6:-;2290:7;2590:12;2640:4;2623:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2623:22:6;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2623:22:6;;;2613:33;;;;;;2605:42;;2590:57;;2671:10;;2664:4;:17;;;;;;2657:24;;;2196:492;;;:::o;1231:746::-;1513:16;1627:1;1532:7;1558:56;;;;;;;;1565:5;1558:56;;;;1572:4;1558:56;;;;1578:1;1558:56;;;;;;1594:12;;1588:3;:18;1558:56;;;;;;1609:1;1558:56;;;;;;1612:1;1558:56;;;;;1532:92;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1532:92:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:96;1513:115;;1700:32;1710:8;1720:5;1727:4;1700:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1700:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:10;1820:13;:23;1834:8;1820:23;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1940:16;:28;1957:10;1940:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;1231:746;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;1785:121:7:-;1850:4;1881:7;:17;;;;;;;;;;;;1874:24;;:3;:24;;1867:31;;1785:121;;;:::o;599:213:5:-;652:7;672:9;;:11;;;;;;;;;;;;;796:8;751:3;756:10;768:9;;734:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;734:44:5;;;724:55;;;;;;716:64;;:88;;;;;;696:108;;599:213;;;:::o;1653:124:7:-;1756:12;;1750:3;:18;1723:7;:17;;;:46;;;;;;;;;;;;;;;;;;1653:124;:::o;2178:225:2:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;60:1786:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\r\n\r\nimport \"./ZombieHelper.sol\";\r\n\r\ncontract ZombieBattle is ZombieHelper {\r\n    uint256 randNonce = 0;\r\n    uint256 attackVictoryProbability = 70;\r\n\r\n    // 2. 난수 생성함수 만들기(Fake Random) // 승리했는지 안했는지 체크 위해 생성\r\n    // a. 컨트랙트에 uint randNonce= 0;\r\n    // b. randMod(uint _modulus)함수 생성 internal returns(uint256)\r\n    // c. randNonce 증가시키고\r\n    // d. return uint(keccak256(abi.encodePacked(now, msg.sender, randNonce))) % _modulus\r\n    // 0.5버전에서는 해시하기전에 abi.encodePacked사\r\n    function randMod(uint256 _modulus) internal returns (uint256) {\r\n        randNonce++;\r\n\r\n        return\r\n            uint256(keccak256(abi.encodePacked(now, msg.sender, randNonce))) %\r\n            _modulus;\r\n    }\r\n\r\n    function attack(uint256 _zombieId, uint256 _targetId)\r\n        external\r\n        zombieOwnerOf(_zombieId)\r\n    {\r\n        Zombie storage myZombie = zombies[_zombieId];\r\n        require(_isReady(myZombie));\r\n        Zombie storage enemyZombie = zombies[_targetId];\r\n\r\n        uint256 rand = randMod(100); //0~99\r\n        // rand (0<(승률):69) ==> 승리\r\n        // rand (>=승률:70 ) ==> 패배\r\n        if (rand < attackVictoryProbability) {\r\n            // 우리 좀비가 승리한 경우\r\n            myZombie.winCount++;\r\n            myZombie.level++;\r\n            enemyZombie.lossCount++;\r\n\r\n            feedAndMultiply(_zombieId, enemyZombie.dna, \"zombie\");\r\n        } else {\r\n            // 패배한 경우\r\n            myZombie.lossCount++;\r\n            enemyZombie.winCount++;\r\n        }\r\n        _triggerCooldown(myZombie);\r\n    }\r\n\r\n    function setAttakVictoryProbability(uint256 _prob) external onlyOwner {\r\n        require(0 <= _prob && _prob <= 100);\r\n\r\n        attackVictoryProbability = _prob;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\user\\seocho_blockchain\\cryptozombie_0.5.16\\contracts\\ZombieBattle.sol",
  "ast": {
    "absolutePath": "project:/contracts/ZombieBattle.sol",
    "exportedSymbols": {
      "ZombieBattle": [
        426
      ]
    },
    "id": 427,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 292,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "project:/contracts/ZombieHelper.sol",
        "file": "./ZombieHelper.sol",
        "id": 293,
        "nodeType": "ImportDirective",
        "scope": 427,
        "sourceUnit": 973,
        "src": "28:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 294,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 972,
              "src": "85:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$972",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 295,
            "nodeType": "InheritanceSpecifier",
            "src": "85:12:5"
          }
        ],
        "contractDependencies": [
          26,
          154,
          586,
          758,
          972
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 426,
        "linearizedBaseContracts": [
          426,
          972,
          758,
          586,
          154,
          26
        ],
        "name": "ZombieBattle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 298,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 426,
            "src": "105:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 296,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "105:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 297,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "125:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 301,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 426,
            "src": "133:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 299,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "133:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 300,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "168:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "661:151:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "672:11:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 308,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "672:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "672:11:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 315,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1137,
                                  "src": "751:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 316,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1135,
                                    "src": "756:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "756:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 318,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "768:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 313,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1122,
                                  "src": "734:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "734:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "734:44:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 312,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1129,
                            "src": "724:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "724:55:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "716:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "716:64:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "796:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "716:88:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 307,
                  "id": 324,
                  "nodeType": "Return",
                  "src": "696:108:5"
                }
              ]
            },
            "documentation": null,
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "616:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:18:5"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "652:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "651:9:5"
            },
            "scope": 426,
            "src": "599:213:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "931:735:5",
              "statements": [
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 402,
                      "src": "942:23:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 336,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 463,
                        "src": "942:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "968:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$463_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 340,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "976:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "968:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$463_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "942:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 344,
                            "name": "myZombie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "1014:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                              "typeString": "struct ZombieFactory.Zombie storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                              "typeString": "struct ZombieFactory.Zombie storage pointer"
                            }
                          ],
                          "id": 343,
                          "name": "_isReady",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 757,
                          "src": "1005:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Zombie_$463_storage_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct ZombieFactory.Zombie storage pointer) view returns (bool)"
                          }
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1005:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1138,
                        1139
                      ],
                      "referencedDeclaration": 1138,
                      "src": "997:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "997:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "997:27:5"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 402,
                      "src": "1035:26:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 348,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 463,
                        "src": "1035:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 353,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 350,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "1064:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$463_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 352,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "1072:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1064:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$463_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1035:47:5"
                },
                {
                  "assignments": [
                    355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 355,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 402,
                      "src": "1095:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1095:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 359,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1118:3:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 356,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "1110:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1095:27:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 360,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "1231:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 361,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "1238:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1231:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 396,
                    "nodeType": "Block",
                    "src": "1505:117:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1553:20:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 386,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "1553:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 462,
                            "src": "1553:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "1553:20:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1588:22:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 391,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "1588:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 460,
                            "src": "1588:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 395,
                        "nodeType": "ExpressionStatement",
                        "src": "1588:22:5"
                      }
                    ]
                  },
                  "id": 397,
                  "nodeType": "IfStatement",
                  "src": "1227:395:5",
                  "trueBody": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "1264:235:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1329:19:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "1329:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 460,
                            "src": "1329:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 367,
                        "nodeType": "ExpressionStatement",
                        "src": "1329:19:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1363:16:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 368,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "1363:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 456,
                            "src": "1363:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 372,
                        "nodeType": "ExpressionStatement",
                        "src": "1363:16:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1394:23:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 373,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "1394:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 462,
                            "src": "1394:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 377,
                        "nodeType": "ExpressionStatement",
                        "src": "1394:23:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 328,
                              "src": "1450:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 380,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 349,
                                "src": "1461:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 381,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 454,
                              "src": "1461:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7a6f6d626965",
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1478:8:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 378,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "1434:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1434:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "1434:53:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "myZombie",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "1649:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      ],
                      "id": 398,
                      "name": "_triggerCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 744,
                      "src": "1632:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$463_storage_ptr_$returns$__$",
                        "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:26:5"
                }
              ]
            },
            "documentation": null,
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 333,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 328,
                    "src": "915:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 334,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 332,
                  "name": "zombieOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 489,
                  "src": "901:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "901:24:5"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "836:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "855:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "835:38:5"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "931:0:5"
            },
            "scope": 426,
            "src": "820:846:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "1744:99:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1763:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "_prob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "1768:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1763:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 414,
                            "name": "_prob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "1777:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "313030",
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1786:3:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1777:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1763:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1138,
                        1139
                      ],
                      "referencedDeclaration": 1138,
                      "src": "1755:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1755:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "1755:35:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "1803:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 421,
                      "name": "_prob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "1830:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1803:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:32:5"
                }
              ]
            },
            "documentation": null,
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 408,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 407,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 87,
                  "src": "1734:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1734:9:5"
              }
            ],
            "name": "setAttakVictoryProbability",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "name": "_prob",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "1710:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1709:15:5"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1744:0:5"
            },
            "scope": 426,
            "src": "1674:169:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 427,
        "src": "60:1786:5"
      }
    ],
    "src": "0:1848:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/ZombieBattle.sol",
      "exportedSymbols": {
        "ZombieBattle": [
          426
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 292,
        "name": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "attributes": {
          "SourceUnit": 973,
          "absolutePath": "project:/contracts/ZombieHelper.sol",
          "file": "./ZombieHelper.sol",
          "scope": 427,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 293,
        "name": "ImportDirective",
        "src": "28:28:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            154,
            586,
            758,
            972
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            426,
            972,
            758,
            586,
            154,
            26
          ],
          "name": "ZombieBattle",
          "scope": 427
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ZombieHelper",
                  "referencedDeclaration": 972,
                  "type": "contract ZombieHelper"
                },
                "id": 294,
                "name": "UserDefinedTypeName",
                "src": "85:12:5"
              }
            ],
            "id": 295,
            "name": "InheritanceSpecifier",
            "src": "85:12:5"
          },
          {
            "attributes": {
              "constant": false,
              "name": "randNonce",
              "scope": 426,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 296,
                "name": "ElementaryTypeName",
                "src": "105:7:5"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 297,
                "name": "Literal",
                "src": "125:1:5"
              }
            ],
            "id": 298,
            "name": "VariableDeclaration",
            "src": "105:21:5"
          },
          {
            "attributes": {
              "constant": false,
              "name": "attackVictoryProbability",
              "scope": 426,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 299,
                "name": "ElementaryTypeName",
                "src": "133:7:5"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3730",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 70",
                  "value": "70"
                },
                "id": 300,
                "name": "Literal",
                "src": "168:2:5"
              }
            ],
            "id": 301,
            "name": "VariableDeclaration",
            "src": "133:37:5"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "randMod",
              "scope": 426,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_modulus",
                      "scope": 326,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 302,
                        "name": "ElementaryTypeName",
                        "src": "616:7:5"
                      }
                    ],
                    "id": 303,
                    "name": "VariableDeclaration",
                    "src": "616:16:5"
                  }
                ],
                "id": 304,
                "name": "ParameterList",
                "src": "615:18:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 326,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 305,
                        "name": "ElementaryTypeName",
                        "src": "652:7:5"
                      }
                    ],
                    "id": 306,
                    "name": "VariableDeclaration",
                    "src": "652:7:5"
                  }
                ],
                "id": 307,
                "name": "ParameterList",
                "src": "651:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 298,
                              "type": "uint256",
                              "value": "randNonce"
                            },
                            "id": 308,
                            "name": "Identifier",
                            "src": "672:9:5"
                          }
                        ],
                        "id": 309,
                        "name": "UnaryOperation",
                        "src": "672:11:5"
                      }
                    ],
                    "id": 310,
                    "name": "ExpressionStatement",
                    "src": "672:11:5"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 307
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "%",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 311,
                                "name": "ElementaryTypeNameExpression",
                                "src": "716:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1129,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 312,
                                    "name": "Identifier",
                                    "src": "724:9:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "encodePacked",
                                          "referencedDeclaration": null,
                                          "type": "function () pure returns (bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1122,
                                              "type": "abi",
                                              "value": "abi"
                                            },
                                            "id": 313,
                                            "name": "Identifier",
                                            "src": "734:3:5"
                                          }
                                        ],
                                        "id": 314,
                                        "name": "MemberAccess",
                                        "src": "734:16:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1137,
                                          "type": "uint256",
                                          "value": "now"
                                        },
                                        "id": 315,
                                        "name": "Identifier",
                                        "src": "751:3:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1135,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 316,
                                            "name": "Identifier",
                                            "src": "756:3:5"
                                          }
                                        ],
                                        "id": 317,
                                        "name": "MemberAccess",
                                        "src": "756:10:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 298,
                                          "type": "uint256",
                                          "value": "randNonce"
                                        },
                                        "id": 318,
                                        "name": "Identifier",
                                        "src": "768:9:5"
                                      }
                                    ],
                                    "id": 319,
                                    "name": "FunctionCall",
                                    "src": "734:44:5"
                                  }
                                ],
                                "id": 320,
                                "name": "FunctionCall",
                                "src": "724:55:5"
                              }
                            ],
                            "id": 321,
                            "name": "FunctionCall",
                            "src": "716:64:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 303,
                              "type": "uint256",
                              "value": "_modulus"
                            },
                            "id": 322,
                            "name": "Identifier",
                            "src": "796:8:5"
                          }
                        ],
                        "id": 323,
                        "name": "BinaryOperation",
                        "src": "716:88:5"
                      }
                    ],
                    "id": 324,
                    "name": "Return",
                    "src": "696:108:5"
                  }
                ],
                "id": 325,
                "name": "Block",
                "src": "661:151:5"
              }
            ],
            "id": 326,
            "name": "FunctionDefinition",
            "src": "599:213:5"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "attack",
              "scope": 426,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombieId",
                      "scope": 403,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 327,
                        "name": "ElementaryTypeName",
                        "src": "836:7:5"
                      }
                    ],
                    "id": 328,
                    "name": "VariableDeclaration",
                    "src": "836:17:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_targetId",
                      "scope": 403,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 329,
                        "name": "ElementaryTypeName",
                        "src": "855:7:5"
                      }
                    ],
                    "id": 330,
                    "name": "VariableDeclaration",
                    "src": "855:17:5"
                  }
                ],
                "id": 331,
                "name": "ParameterList",
                "src": "835:38:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 335,
                "name": "ParameterList",
                "src": "931:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 489,
                      "type": "modifier (uint256)",
                      "value": "zombieOwnerOf"
                    },
                    "id": 332,
                    "name": "Identifier",
                    "src": "901:13:5"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 328,
                      "type": "uint256",
                      "value": "_zombieId"
                    },
                    "id": 333,
                    "name": "Identifier",
                    "src": "915:9:5"
                  }
                ],
                "id": 334,
                "name": "ModifierInvocation",
                "src": "901:24:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        337
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "myZombie",
                          "scope": 402,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Zombie",
                              "referencedDeclaration": 463,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 336,
                            "name": "UserDefinedTypeName",
                            "src": "942:6:5"
                          }
                        ],
                        "id": 337,
                        "name": "VariableDeclaration",
                        "src": "942:23:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 466,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 338,
                            "name": "Identifier",
                            "src": "968:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 328,
                              "type": "uint256",
                              "value": "_zombieId"
                            },
                            "id": 339,
                            "name": "Identifier",
                            "src": "976:9:5"
                          }
                        ],
                        "id": 340,
                        "name": "IndexAccess",
                        "src": "968:18:5"
                      }
                    ],
                    "id": 341,
                    "name": "VariableDeclarationStatement",
                    "src": "942:44:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1138,
                                1139
                              ],
                              "referencedDeclaration": 1138,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 342,
                            "name": "Identifier",
                            "src": "997:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                                      "typeString": "struct ZombieFactory.Zombie storage pointer"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 757,
                                  "type": "function (struct ZombieFactory.Zombie storage pointer) view returns (bool)",
                                  "value": "_isReady"
                                },
                                "id": 343,
                                "name": "Identifier",
                                "src": "1005:8:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 337,
                                  "type": "struct ZombieFactory.Zombie storage pointer",
                                  "value": "myZombie"
                                },
                                "id": 344,
                                "name": "Identifier",
                                "src": "1014:8:5"
                              }
                            ],
                            "id": 345,
                            "name": "FunctionCall",
                            "src": "1005:18:5"
                          }
                        ],
                        "id": 346,
                        "name": "FunctionCall",
                        "src": "997:27:5"
                      }
                    ],
                    "id": 347,
                    "name": "ExpressionStatement",
                    "src": "997:27:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        349
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "enemyZombie",
                          "scope": 402,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Zombie",
                              "referencedDeclaration": 463,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 348,
                            "name": "UserDefinedTypeName",
                            "src": "1035:6:5"
                          }
                        ],
                        "id": 349,
                        "name": "VariableDeclaration",
                        "src": "1035:26:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 466,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 350,
                            "name": "Identifier",
                            "src": "1064:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 330,
                              "type": "uint256",
                              "value": "_targetId"
                            },
                            "id": 351,
                            "name": "Identifier",
                            "src": "1072:9:5"
                          }
                        ],
                        "id": 352,
                        "name": "IndexAccess",
                        "src": "1064:18:5"
                      }
                    ],
                    "id": 353,
                    "name": "VariableDeclarationStatement",
                    "src": "1035:47:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        355
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "rand",
                          "scope": 402,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 354,
                            "name": "ElementaryTypeName",
                            "src": "1095:7:5"
                          }
                        ],
                        "id": 355,
                        "name": "VariableDeclaration",
                        "src": "1095:12:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 326,
                              "type": "function (uint256) returns (uint256)",
                              "value": "randMod"
                            },
                            "id": 356,
                            "name": "Identifier",
                            "src": "1110:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "313030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 100",
                              "value": "100"
                            },
                            "id": 357,
                            "name": "Literal",
                            "src": "1118:3:5"
                          }
                        ],
                        "id": 358,
                        "name": "FunctionCall",
                        "src": "1110:12:5"
                      }
                    ],
                    "id": 359,
                    "name": "VariableDeclarationStatement",
                    "src": "1095:27:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 355,
                              "type": "uint256",
                              "value": "rand"
                            },
                            "id": 360,
                            "name": "Identifier",
                            "src": "1231:4:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 301,
                              "type": "uint256",
                              "value": "attackVictoryProbability"
                            },
                            "id": 361,
                            "name": "Identifier",
                            "src": "1238:24:5"
                          }
                        ],
                        "id": 362,
                        "name": "BinaryOperation",
                        "src": "1231:31:5"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "winCount",
                                      "referencedDeclaration": 460,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 337,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "myZombie"
                                        },
                                        "id": 363,
                                        "name": "Identifier",
                                        "src": "1329:8:5"
                                      }
                                    ],
                                    "id": 365,
                                    "name": "MemberAccess",
                                    "src": "1329:17:5"
                                  }
                                ],
                                "id": 366,
                                "name": "UnaryOperation",
                                "src": "1329:19:5"
                              }
                            ],
                            "id": 367,
                            "name": "ExpressionStatement",
                            "src": "1329:19:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "level",
                                      "referencedDeclaration": 456,
                                      "type": "uint32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 337,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "myZombie"
                                        },
                                        "id": 368,
                                        "name": "Identifier",
                                        "src": "1363:8:5"
                                      }
                                    ],
                                    "id": 370,
                                    "name": "MemberAccess",
                                    "src": "1363:14:5"
                                  }
                                ],
                                "id": 371,
                                "name": "UnaryOperation",
                                "src": "1363:16:5"
                              }
                            ],
                            "id": 372,
                            "name": "ExpressionStatement",
                            "src": "1363:16:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "lossCount",
                                      "referencedDeclaration": 462,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 349,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "enemyZombie"
                                        },
                                        "id": 373,
                                        "name": "Identifier",
                                        "src": "1394:11:5"
                                      }
                                    ],
                                    "id": 375,
                                    "name": "MemberAccess",
                                    "src": "1394:21:5"
                                  }
                                ],
                                "id": 376,
                                "name": "UnaryOperation",
                                "src": "1394:23:5"
                              }
                            ],
                            "id": 377,
                            "name": "ExpressionStatement",
                            "src": "1394:23:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                          "typeString": "literal_string \"zombie\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 703,
                                      "type": "function (uint256,uint256,string memory)",
                                      "value": "feedAndMultiply"
                                    },
                                    "id": 378,
                                    "name": "Identifier",
                                    "src": "1434:15:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 328,
                                      "type": "uint256",
                                      "value": "_zombieId"
                                    },
                                    "id": 379,
                                    "name": "Identifier",
                                    "src": "1450:9:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "dna",
                                      "referencedDeclaration": 454,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 349,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "enemyZombie"
                                        },
                                        "id": 380,
                                        "name": "Identifier",
                                        "src": "1461:11:5"
                                      }
                                    ],
                                    "id": 381,
                                    "name": "MemberAccess",
                                    "src": "1461:15:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "7a6f6d626965",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"zombie\"",
                                      "value": "zombie"
                                    },
                                    "id": 382,
                                    "name": "Literal",
                                    "src": "1478:8:5"
                                  }
                                ],
                                "id": 383,
                                "name": "FunctionCall",
                                "src": "1434:53:5"
                              }
                            ],
                            "id": 384,
                            "name": "ExpressionStatement",
                            "src": "1434:53:5"
                          }
                        ],
                        "id": 385,
                        "name": "Block",
                        "src": "1264:235:5"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "lossCount",
                                      "referencedDeclaration": 462,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 337,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "myZombie"
                                        },
                                        "id": 386,
                                        "name": "Identifier",
                                        "src": "1553:8:5"
                                      }
                                    ],
                                    "id": 388,
                                    "name": "MemberAccess",
                                    "src": "1553:18:5"
                                  }
                                ],
                                "id": 389,
                                "name": "UnaryOperation",
                                "src": "1553:20:5"
                              }
                            ],
                            "id": 390,
                            "name": "ExpressionStatement",
                            "src": "1553:20:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "winCount",
                                      "referencedDeclaration": 460,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 349,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "enemyZombie"
                                        },
                                        "id": 391,
                                        "name": "Identifier",
                                        "src": "1588:11:5"
                                      }
                                    ],
                                    "id": 393,
                                    "name": "MemberAccess",
                                    "src": "1588:20:5"
                                  }
                                ],
                                "id": 394,
                                "name": "UnaryOperation",
                                "src": "1588:22:5"
                              }
                            ],
                            "id": 395,
                            "name": "ExpressionStatement",
                            "src": "1588:22:5"
                          }
                        ],
                        "id": 396,
                        "name": "Block",
                        "src": "1505:117:5"
                      }
                    ],
                    "id": 397,
                    "name": "IfStatement",
                    "src": "1227:395:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Zombie_$463_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 744,
                              "type": "function (struct ZombieFactory.Zombie storage pointer)",
                              "value": "_triggerCooldown"
                            },
                            "id": 398,
                            "name": "Identifier",
                            "src": "1632:16:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 337,
                              "type": "struct ZombieFactory.Zombie storage pointer",
                              "value": "myZombie"
                            },
                            "id": 399,
                            "name": "Identifier",
                            "src": "1649:8:5"
                          }
                        ],
                        "id": 400,
                        "name": "FunctionCall",
                        "src": "1632:26:5"
                      }
                    ],
                    "id": 401,
                    "name": "ExpressionStatement",
                    "src": "1632:26:5"
                  }
                ],
                "id": 402,
                "name": "Block",
                "src": "931:735:5"
              }
            ],
            "id": 403,
            "name": "FunctionDefinition",
            "src": "820:846:5"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setAttakVictoryProbability",
              "scope": 426,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_prob",
                      "scope": 425,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 404,
                        "name": "ElementaryTypeName",
                        "src": "1710:7:5"
                      }
                    ],
                    "id": 405,
                    "name": "VariableDeclaration",
                    "src": "1710:13:5"
                  }
                ],
                "id": 406,
                "name": "ParameterList",
                "src": "1709:15:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 409,
                "name": "ParameterList",
                "src": "1744:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 87,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 407,
                    "name": "Identifier",
                    "src": "1734:9:5"
                  }
                ],
                "id": 408,
                "name": "ModifierInvocation",
                "src": "1734:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1138,
                                1139
                              ],
                              "referencedDeclaration": 1138,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 410,
                            "name": "Identifier",
                            "src": "1755:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 411,
                                    "name": "Literal",
                                    "src": "1763:1:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 405,
                                      "type": "uint256",
                                      "value": "_prob"
                                    },
                                    "id": 412,
                                    "name": "Identifier",
                                    "src": "1768:5:5"
                                  }
                                ],
                                "id": 413,
                                "name": "BinaryOperation",
                                "src": "1763:10:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 405,
                                      "type": "uint256",
                                      "value": "_prob"
                                    },
                                    "id": 414,
                                    "name": "Identifier",
                                    "src": "1777:5:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "313030",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 100",
                                      "value": "100"
                                    },
                                    "id": 415,
                                    "name": "Literal",
                                    "src": "1786:3:5"
                                  }
                                ],
                                "id": 416,
                                "name": "BinaryOperation",
                                "src": "1777:12:5"
                              }
                            ],
                            "id": 417,
                            "name": "BinaryOperation",
                            "src": "1763:26:5"
                          }
                        ],
                        "id": 418,
                        "name": "FunctionCall",
                        "src": "1755:35:5"
                      }
                    ],
                    "id": 419,
                    "name": "ExpressionStatement",
                    "src": "1755:35:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 301,
                              "type": "uint256",
                              "value": "attackVictoryProbability"
                            },
                            "id": 420,
                            "name": "Identifier",
                            "src": "1803:24:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 405,
                              "type": "uint256",
                              "value": "_prob"
                            },
                            "id": 421,
                            "name": "Identifier",
                            "src": "1830:5:5"
                          }
                        ],
                        "id": 422,
                        "name": "Assignment",
                        "src": "1803:32:5"
                      }
                    ],
                    "id": 423,
                    "name": "ExpressionStatement",
                    "src": "1803:32:5"
                  }
                ],
                "id": 424,
                "name": "Block",
                "src": "1744:99:5"
              }
            ],
            "id": 425,
            "name": "FunctionDefinition",
            "src": "1674:169:5"
          }
        ],
        "id": 426,
        "name": "ContractDefinition",
        "src": "60:1786:5"
      }
    ],
    "id": 427,
    "name": "SourceUnit",
    "src": "0:1848:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-11T05:36:05.199Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "withdraw(uint256)": {
        "notice": "withdraw: 주어진 parameter만큼 인출"
      },
      "withdrawAll()": {
        "notice": "withdrawAll: 전액 인출"
      }
    }
  }
}